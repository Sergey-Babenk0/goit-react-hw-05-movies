{"version":3,"file":"static/js/499.8273b319.chunk.js","mappings":"qPAEMA,EAAaC,EAAAA,EAAAA,GAAH,0EAMVC,EAAaD,EAAAA,EAAAA,GAAH,yVAmBVE,EAAaF,EAAAA,EAAAA,EAAH,8CAIVG,EAAaH,EAAAA,EAAAA,KAAH,8C,SCEhB,EAvBgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBH,GAAII,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,EAAKC,QAA9B,GAC3B,GAAE,CAACN,KAGF,gCACGF,EAAQS,OAAS,IAAK,sEACvB,SAACf,EAAD,UACGM,EAAQU,KAAI,WAAsBC,GAAtB,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,UAACjB,EAAD,YACE,SAACE,EAAD,uBADF,IACqCc,GACnC,SAACf,EAAD,UAAagB,MAFEF,EADN,QASpB,C,+LC7BKG,EAAM,mCACNC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,uCACqBD,IAF9C,cACQI,EADR,yBAISA,GAJT,2EAOeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BjB,GAA9B,uFACyBe,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+Bb,EAA/B,oBAA6CY,IADtE,cACQI,EADR,yBAESA,GAFT,2EAKeE,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFACyBJ,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iCACeD,EADf,YACsBO,IAF/C,cACQH,EADR,yBAISA,GAJT,2EAOeI,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCpB,GAAhC,uFACyBe,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,4BACsBY,IAF/C,cACQI,EADR,yBAISA,GAJT,2EAOeb,EAAiB,GAAjBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAgCH,GAAhC,uFACyBe,EAAAA,EAAAA,IAAA,UAClBF,EADkB,kBACAb,EADA,4BACsBY,IAF/C,cACQI,EADR,yBAKSA,GALT,kE","sources":["pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","services/The-movie-database-API.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst ReviewList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nconst ReviewItem = styled.li`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  border-radius: 0.5rem;\n  background-color: #fff;\n  h3 {\n    margin-top: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n  p {\n    margin: 0;\n    font-size: 0.9rem;\n    line-height: 1.5;\n  }\n`;\n\nconst ReviewText = styled.p`\n  padding: 10px 0 0;\n`;\n\nconst ReviewSpan = styled.span`\n  font-weight: bold;\n`;\n\nexport { ReviewList, ReviewItem, ReviewText, ReviewSpan };\n","import { fetchReviewsById } from '../../services/The-movie-database-API';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewText,\n  ReviewSpan,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    fetchReviewsById(id).then(({ data }) => setReviews(data.results));\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length < 1 && <p>We don't have any reviews for this movie.</p>}\n      <ReviewList>\n        {reviews.map(({ author, content }, index) => (\n          <ReviewItem key={index}>\n            <ReviewSpan> Author:</ReviewSpan> {author}\n            <ReviewText>{content}</ReviewText>\n          </ReviewItem>\n        ))}\n      </ReviewList>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'fd28b85e264eab67a639ae3db03827da';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function fetchTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${KEY}`\n  );\n  return response;\n}\n\nasync function fetchMovieById(id) {\n  const response = await axios.get(`${BASE_URL}/movie/${id}?api_key=${KEY}`);\n  return response;\n}\n\nasync function fetchMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${KEY}&${query}`\n  );\n  return response;\n}\n\nasync function fetchCreditsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}`\n  );\n  return response;\n}\n\nasync function fetchReviewsById(id) {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}`\n  );\n\n  return response;\n}\n\nexport {\n  fetchTrendingMovies,\n  fetchMovieById,\n  fetchMovieBySearch,\n  fetchCreditsById,\n  fetchReviewsById,\n};\n"],"names":["ReviewList","styled","ReviewItem","ReviewText","ReviewSpan","useState","reviews","setReviews","id","useParams","useEffect","fetchReviewsById","then","data","results","length","map","index","author","content","KEY","BASE_URL","fetchTrendingMovies","axios","response","fetchMovieById","fetchMovieBySearch","query","fetchCreditsById"],"sourceRoot":""}